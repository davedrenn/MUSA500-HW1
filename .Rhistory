<<<<<<< HEAD
<<<<<<< HEAD
=======
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','# Households Living in Poverty','% of Individuals with Bachelor Degrees or Higher','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value")
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV100), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','# Households Living in Poverty','% of Individuals with Bachelor Degrees or Higher','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value")
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNBELPOV100), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
View(data)
View(map)
View(data)
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV100), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
>>>>>>> parent of 1212492 (Push small updates)
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR, data=data)
summary(fit)
anova(fit)
#Predicted values (y-hats)
data$predvals <- fitted(fit)
#Residuals
data$resids <- residuals(fit)
#Standardized Residuals
data$stdres <- rstandard(fit)
plot(data$predvals, data$stdres, xlab = "Predicted Values ", ylab = "Standardized Residuals ", main = "Predicted Values vs.Standardized Residuals ")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','# Households Living in Poverty','% of Individuals with Bachelor Degrees or Higher','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value")
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR, data=data)
summary(fit)
anova(fit)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','# Households Living in Poverty','% of Individuals with Bachelor Degrees or Higher','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value")
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR, data=data)
summary(fit)
anova(fit)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','# Households Living in Poverty','% of Individuals with Bachelor Degrees or Higher','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
<<<<<<< HEAD
=======
>>>>>>> 1212492685c8807146e1567e25bfbea04efcd431
=======
>>>>>>> parent of 1212492 (Push small updates)
labs(title = "Log Median Home Value")
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR, data=data)
summary(fit)
anova(fit)
#Predicted values (y-hats)
data$predvals <- fitted(fit)
#Residuals
data$resids <- residuals(fit)
#Standardized Residuals
data$stdres <- rstandard(fit)
plot(data$predvals, data$stdres, xlab = "Predicted Values ", ylab = "Standardized Residuals ", main = "Predicted Values vs.Standardized Residuals ")
<<<<<<< HEAD
<<<<<<< HEAD
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','# Households Living in Poverty','% of Individuals with Bachelor Degrees or Higher','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value")
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR, data=data)
summary(fit)
anova(fit)
##predicted values, residuals and standardized residuals
#Predicted values (y-hats)
data$predvals <- fitted(fit)
#Residuals
data$resids <- residuals(fit)
#Standardized Residuals
data$stdres <- rstandard(fit)
plot(data$predvals, data$stdres, xlab = "Predicted Values ", ylab = "Standardized Residuals ", main = "Predicted Values vs.Standardized Residuals ")
step <- stepAIC(fit, direction="both")
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
step <- stepAIC(fit, direction="both")
library(MASS)
step <- stepAIC(fit, direction="both")
# display results
#We see that in the final model PCTVACANT was dropped
step$anova
=======
library(Hmisc)
library(Hmisc)
library(DAAG)
library(car)  #to calculate VIF
library(MASS)
library(rsq)
library(tidyverse)
library(caret)
library(dplyr)
setwd("C:/Users/eugeneby/Dropbox/Documents/Work and School/Teaching/CPLN 671 - Statistics and Data Mining/Data/Lecture 3 - R")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
library(MASS)
library(DAAG)
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','# Households Living in Poverty','% of Individuals with Bachelor Degrees or Higher','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value")
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
## Regression Results
>>>>>>> 1212492685c8807146e1567e25bfbea04efcd431
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
summary(fit)
anova(fit)
##predicted values, residuals and standardized residuals
#Predicted values (y-hats)
data$predvals <- fitted(fit)
#Residuals
data$resids <- residuals(fit)
#Standardized Residuals
data$stdres <- rstandard(fit)
plot(data$predvals, data$stdres, xlab = "Predicted Values ", ylab = "Standardized Residuals ", main = "Predicted Values vs.Standardized Residuals ")
step <- stepAIC(fit, direction="both")
# display results
<<<<<<< HEAD
#We see that in the final model PCTVACANT was dropped
step$anova
# display results
step$anova
=======
step$anova
fit1 <- lm(LNMEDHVAL ~ PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
cv1 <- CVlm(data=data, fit1, m=5)
mse1 <- attr(cv1, "ms")
rmse1 <- sqrt(mse1)						  #Obtaining RMSE for model 1
rmse1
fit2 <- lm(LNMEDHVAL ~ PCTVACANT + MEDHHINC, data=data)
cv2 <- CVlm(data=data, fit2, m=5)
mse2 <- attr(cv2, "ms")
rmse2 <- sqrt(mse2)						  #Obtaining RMSE for model 2
rmse2
library(Hmisc)
library(DAAG)
library(car)  #to calculate VIF
library(MASS)
library(rsq)
library(tidyverse)
library(caret)
library(dplyr)
setwd("C:/Users/eugeneby/Dropbox/Documents/Work and School/Teaching/CPLN 671 - Statistics and Data Mining/Data/Lecture 3 - R")
>>>>>>> 1212492685c8807146e1567e25bfbea04efcd431
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
library(MASS)
<<<<<<< HEAD
library(MASS)
options(scipen = 999)
fit1 <- lm(LNMEDHVAL ~ PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
cv1 <- CVlm(data=data, fit1, m=5)
library(DAAG)
cv1 <- CVlm(data=data, fit1, m=5)
fit1 <- lm(LNMEDHVAL ~ PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
cv1 <- CVlm(data=data, fit1, m=5)
fit2 <- lm(LNMEDHVAL ~ PCTVACANT + MEDHHINC, data=data)
fit1 <- lm(LNMEDHVAL ~ PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
cv1 <- CVlm(data=data, fit1, m=5)
fit2 <- lm(LNMEDHVAL ~ PCTVACANT + MEDHHINC, data=data)
cv2 <- CVlm(data=data, fit2, m=5)
mse1 <- attr(cv1, "ms")
rmse1 <- sqrt(mse1)						  #Obtaining RMSE for model 1
rmse1
mse2 <- attr(cv2, "ms")
rmse2 <- sqrt(mse2)						  #Obtaining RMSE for model 2
rmse2
fit1 <- lm(LNMEDHVAL ~ PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
cv1 <- CVlm(data=data, fit1, m=5)
mse1 <- attr(cv1, "ms")
rmse1 <- sqrt(mse1)						  #Obtaining RMSE for model 1
rmse1
fit2 <- lm(LNMEDHVAL ~ PCTVACANT + MEDHHINC, data=data)
cv2 <- CVlm(data=data, fit2, m=5)
mse2 <- attr(cv2, "ms")
rmse2 <- sqrt(mse2)						  #Obtaining RMSE for model 2
rmse2
hist(rstandard)
hist(data$stdrs)
hist(data$stdres)
View(data)
=======
library(DAAG)
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','# Households Living in Poverty','% of Individuals with Bachelor Degrees or Higher','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
>>>>>>> 1212492685c8807146e1567e25bfbea04efcd431
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value")
<<<<<<< HEAD
View(map)
map2 <- cbind(data, map %>% dply::select(stdres))
map2 <- cbind(data, map %>% dplyr::select(stdres))
map2 <- cbind(map, data %>% dplyr::select(stdres))
View(map2)
ggplot(data = map2, fill = stdres)
ggplot()+
geom_sf(data=map2, aes(fill = stdres))
ggplot()+
geom_sf(data=map2, aes(fill = stdres))+
scale_fill_gradient(low = "red",high = "blue")
ggplot()+
geom_sf(data=map2, aes(fill = stdres))+
scale_fill_viridis_b()
ggplot()+
geom_sf(data=map2, aes(fill = stdres))+
scale_fill_viridis_a()
ggplot()+
geom_sf(data=map2, aes(fill = stdres))+
scale_fill_viridis()
ggplot()+
geom_sf(data=map2, aes(fill = stdres))+
scale_fill_viridis_b()
ggplot()+
geom_sf(data=map2, aes(fill = stdres))+
scale_fill_viridis_c()
ggplot()+
geom_sf(data=map2, aes(fill = stdres), color = NA)+
scale_fill_viridis_c()
=======
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
summary(fit)
anova(fit)
##predicted values, residuals and standardized residuals
#Predicted values (y-hats)
data$predvals <- fitted(fit)
#Residuals
data$resids <- residuals(fit)
#Standardized Residuals
data$stdres <- rstandard(fit)
plot(data$predvals, data$stdres, xlab = "Predicted Values ", ylab = "Standardized Residuals ", main = "Predicted Values vs.Standardized Residuals ")
step <- stepAIC(fit, direction="both")
# display results
step$anova
fit1 <- lm(LNMEDHVAL ~ PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
cv1 <- CVlm(data=data, fit1, m=5)
mse1 <- attr(cv1, "ms")
rmse1 <- sqrt(mse1)						  #Obtaining RMSE for model 1
rmse1
fit2 <- lm(LNMEDHVAL ~ PCTVACANT + MEDHHINC, data=data)
cv2 <- CVlm(data=data, fit2, m=5)
mse2 <- attr(cv2, "ms")
rmse2 <- sqrt(mse2)						  #Obtaining RMSE for model 2
rmse2
hist(data$stdres)
map2 <- cbind(map, data %>% dplyr::select(stdres))
ggplot()+
geom_sf(data=map2, aes(fill = stdres), color = NA)+
scale_fill_viridis_c()
View(data)
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median House Value','% of Individuals with Bachelor Degrees or Higher','# Households Living in Poverty','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
View(data)
sd(data$MEDHVAL)
sd(data$PCTSINGLES)
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=50)
hist(data$LNMEDHVAL,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=50)
hist(data$LNPCTBACHMOR,breaks=50)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=100)
hist(data$LNMEDHVAL,breaks=100)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=50)
hist(data$LNBELPOV100,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=50)
hist(data$LNPCTVACANT,breaks=50)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
# You can set some global options for knitting chunks
knitr::opts_chunk$set(echo = TRUE)
# Load some libraries
library(tidyverse)
library(sf)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(grid)
library(gridExtra)
library(ggcorrplot) # plot correlation plot
library(corrr)      # another way to plot correlation plot
library(kableExtra)
library(jtools)     # for regression model plots
library(ggstance) # to support jtools plots
library(ggpubr)    # plotting R^2 value on ggplot point scatter
library(broom.mixed) # needed for effects plots
# functions and data directory
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#25CB10", "#5AB60C", "#8FA108",   "#C48C04", "#FA7800")
nhoods <-
st_read("https://raw.githubusercontent.com/mafichman/musa_5080_2023/main/Week_4/neighborhoods/bost_nhoods.geojson") %>%
st_transform('ESRI:102286')
boston <-
read.csv(file.path(root.dir,"/Chapter3_4/bostonHousePriceData_clean.csv"))
boston.sf <-
boston %>%
st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326, agr = "constant") %>%
st_transform('ESRI:102286')
bostonCrimes <- read.csv(file.path(root.dir,"/Chapter3_4/bostonCrimes.csv"))
# finding counts by group
bostonCrimes %>%
group_by(OFFENSE_CODE_GROUP) %>%
summarize(count = n()) %>%
arrange(-count) %>% top_n(10) %>%
kable() %>%
kable_styling()
# ggplot, reorder
# Mapping data
ggplot() +
geom_sf(data = nhoods, fill = "grey40") +
geom_sf(data = boston.sf, aes(colour = q5(PricePerSq)),
show.legend = "point", size = .75) +
scale_colour_manual(values = palette5,
labels=qBr(boston,"PricePerSq"),
name="Quintile\nBreaks") +
labs(title="Price Per Square Foot, Boston") +
mapTheme()
bostonCrimes.sf <-
bostonCrimes %>%
filter(OFFENSE_CODE_GROUP == "Aggravated Assault",
Lat > -1) %>%
dplyr::select(Lat, Long) %>%
na.omit() %>%
st_as_sf(coords = c("Long", "Lat"), crs = "EPSG:4326") %>%
st_transform('ESRI:102286') %>%
distinct()
# Counts of crime per buffer of house sale
boston.sf$crimes.Buffer <- boston.sf %>%
st_buffer(660) %>%
aggregate(mutate(bostonCrimes.sf, counter = 1),., sum) %>%
pull(counter)
## Nearest Neighbor Feature
boston.sf <-
boston.sf %>%
mutate(
crime_nn1 = nn_function(st_coordinates(boston.sf),
st_coordinates(bostonCrimes.sf), k = 1),
crime_nn2 = nn_function(st_coordinates(boston.sf),
st_coordinates(bostonCrimes.sf), k = 2),
crime_nn3 = nn_function(st_coordinates(boston.sf),
st_coordinates(bostonCrimes.sf), k = 3),
crime_nn4 = nn_function(st_coordinates(boston.sf),
st_coordinates(bostonCrimes.sf), k = 4),
crime_nn5 = nn_function(st_coordinates(boston.sf),
st_coordinates(bostonCrimes.sf), k = 5))
## Plot assault density
ggplot() + geom_sf(data = nhoods, fill = "grey40") +
stat_density2d(data = data.frame(st_coordinates(bostonCrimes.sf)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_gradient(low = "#25CB10", high = "#FA7800", name = "Density") +
scale_alpha(range = c(0.00, 0.35), guide = "none") +
labs(title = "Density of Aggravated Assaults, Boston") +
mapTheme()
## Home Features cor
st_drop_geometry(boston.sf) %>%
mutate(Age = 2015 - YR_BUILT) %>%
dplyr::select(SalePrice, LivingArea, Age, GROSS_AREA) %>%
filter(SalePrice <= 1000000, Age < 500) %>%
gather(Variable, Value, -SalePrice) %>%
ggplot(aes(Value, SalePrice)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 3, scales = "free") +
labs(title = "Price as a function of continuous variables") +
plotTheme()
## Crime cor
boston.sf %>%
st_drop_geometry() %>%
mutate(Age = 2015 - YR_BUILT) %>%
dplyr::select(SalePrice, starts_with("crime_")) %>%
filter(SalePrice <= 1000000) %>%
gather(Variable, Value, -SalePrice) %>%
ggplot(aes(Value, SalePrice)) +
geom_point(size = .5) + geom_smooth(method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, nrow = 1, scales = "free") +
labs(title = "Price as a function of continuous variables") +
plotTheme()
numericVars <-
select_if(st_drop_geometry(boston.sf), is.numeric) %>% na.omit()
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
type="lower",
insig = "blank") +
labs(title = "Correlation across numeric variables")
# yet another way to plot the correlation plot using the corrr library
numericVars %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 2)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
library(MASS)
library(DAAG)
library(ggcorrplot) # plot correlation plot
options(scipen = 999)
predictors <- data::select(PCTBACHMOR, PCTVACANT, PCTSINGLES, LNBELPOV100)
predictors <- data %>% dplyr::select(PCTBACHMOR, PCTVACANT, PCTSINGLES, LNBELPOV100)
predictors %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 2)
predictors <- data %>% dplyr::select(PCTBACHMOR, PCTVACANT, PCTSINGLES, LNBELPOV100)
predictors %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 10)
predictors <- data %>% dplyr::select(PCTBACHMOR, PCTVACANT, PCTSINGLES, LNBELPOV100)
predictors %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 8)
predictors <- data::select() as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
predictors <- as.matrix(cbind(data$PCTBACHMOR, data$PCTVACANT,data$PCTSINGLES,data$LNBELPOV100 ))
cor(predictors) %>% as.data.frame.table() %>%
spread(key='Var2',value='Freq') %>%
mutate(row_name = c('PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
dplyr::select('row_name','A','B','C','D') %>%
kbl(col.names = c('','PCTBACHMOR','PCTVACANT','PCTSINGLES','LNBELPOV100')) %>%
kable_classic()
predictors <- data %>% dplyr::select(PCTBACHMOR, PCTVACANT, PCTSINGLES, LNBELPOV100)
predictors %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 8)
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=50)
hist(data$LNPCTSINGLES,breaks=50)
>>>>>>> 1212492685c8807146e1567e25bfbea04efcd431
=======
>>>>>>> parent of 1212492 (Push small updates)
