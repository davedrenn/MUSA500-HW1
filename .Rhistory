left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=100)
hist(data$LNMEDHVAL,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=100)
hist(data$LNPCTBACHMOR,breaks=100)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=100)
hist(data$LNBELPOV100,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=100)
hist(data$LNPCTVACANT,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=100)
hist(data$LNPCTSINGLES,breaks=100)
predictors <- data %>% dplyr::select(PCTBACHMOR, PCTVACANT, PCTSINGLES, LNBELPOV100)
predictors %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 8)
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value") +
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
summary(fit)
anova(fit)
step <- stepAIC(fit, direction="both")
# display results
step$anova
fit1 <- lm(LNMEDHVAL ~ PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
cv1 <- CVlm(data=data, fit1, m=5)
mse1 <- attr(cv1, "ms")
rmse1 <- sqrt(mse1)						  #Obtaining RMSE for model 1
rmse1
fit2 <- lm(LNMEDHVAL ~ PCTVACANT + MEDHHINC, data=data)
cv2 <- CVlm(data=data, fit2, m=5)
mse2 <- attr(cv2, "ms")
rmse2 <- sqrt(mse2)						  #Obtaining RMSE for model 2
rmse2
par(mfrow=c(2,2))
plot(data$LNBELPOV100, data$LNMEDHVAL)
plot(data$PCTBACHMOR,data$LNMEDHVAL)
plot(data$PCTVACANT, data$LNMEDHVAL)
plot(data$PCTSINGLES, data$LNMEDHVAL)
#predicted values, residuals and standardized residuals
#Predicted values (y-hats)
data$predvals <- fitted(fit)
#Residuals
data$resids <- residuals(fit)
#Standardized Residuals
data$stdres <- rstandard(fit)
hist(data$stdres)
plot(data$predvals, data$stdres, xlab = "Predicted Values ", ylab = "Standardized Residuals ", main = "Predicted Values vs.Standardized Residuals ")
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
library(MASS)
library(DAAG)
library(corrr)      # another way to plot correlation plot
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median Houme Value of all occupied housing units','% of Individuals with Bachelor Degrees or Higher','# Households Living in Poverty','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=100)
hist(data$LNMEDHVAL,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=100)
hist(data$LNPCTBACHMOR,breaks=100)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=100)
hist(data$LNBELPOV100,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=100)
hist(data$LNPCTVACANT,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=100)
hist(data$LNPCTSINGLES,breaks=100)
# Change design
map <- st_read("Data/RegressionData.shp")
ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value") +
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
# Change design
map <- st_read("Data/RegressionData.shp")
A <- ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value") +
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
A
A
predictors <- data %>% dplyr::select(PCTBACHMOR, PCTVACANT, PCTSINGLES, LNBELPOV100)
predictors %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 8)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
library(MASS)
library(DAAG)
library(corrr)      # another way to plot correlation plot
options(scipen = 999)
data <- read.csv("Data/RegressionData.csv")
summary_stats_mean <- data %>%
summarise(HEDVAL = mean(MEDHVAL),
PCTBACHMOR = mean(PCTBACHMOR),
NBELPOV100 = mean(NBELPOV100),
PCTVACANT = mean(PCTVACANT),
PCTSINGLE = mean(PCTSINGLES)) %>%
gather(key = "variable", value = "mean")
summary_stats_sd <- data %>%
summarise(HEDVAL = sd(MEDHVAL),
PCTBACHMOR = sd(PCTBACHMOR),
NBELPOV100 = sd(NBELPOV100),
PCTVACANT = sd(PCTVACANT),
PCTSINGLE = sd(PCTSINGLES)) %>%
gather(key = "variable", value = "sd") %>%
mutate(row_names = c('Median Houme Value of all occupied housing units','% of Individuals with Bachelor Degrees or Higher','# Households Living in Poverty','% of Vacant Houses','% of Single House Units'))
left_join(summary_stats_mean, summary_stats_sd, by='variable') %>%
dplyr::select('row_names','mean','sd') %>%
kbl(col.names = c('Variable','Mean','Standard Deviation')) %>%
kable_classic()
zero_columns <- apply(data, 2, function(col) any(col == 0))
variables_with_zero_values <- names(zero_columns[zero_columns])
cat("Columns with 0 values:", paste(variables_with_zero_values, collapse = ", "))
data$LNMEDHVAL <- log(data$MEDHVAL)
data$LNPCTBACHMOR <- log(1 + data$PCTBACHMOR)
data$LNBELPOV100 <- log(1 + data$NBELPOV100)
data$LNPCTVACANT <- log(1 + data$PCTVACANT)
data$LNPCTSINGLES <- log(1 + data$PCTSINGLES)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=100)
hist(data$LNMEDHVAL,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=100)
hist(data$LNPCTBACHMOR,breaks=100)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=100)
hist(data$LNBELPOV100,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=100)
hist(data$LNPCTVACANT,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=100)
hist(data$LNPCTSINGLES,breaks=100)
# Change design
map <- st_read("Data/RegressionData.shp")
A <- ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value") +
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
A
# Change designs
pctvacant_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTVACANT), color = NA) +
scale_fill_gradient(low = "white",high = "darkblue") +
labs(title = "Vacant",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
pctsingles_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTSINGLES), color = NA) +
scale_fill_gradient(low = "white",high = "darkorchid4") +
labs(title = "Singles",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
pctbachmor_map <- ggplot() +
geom_sf(data = map, aes(fill = PCTBACHMOR), color = NA) +
scale_fill_gradient(low = "white",high = "darkorange") +
labs(title = "Bachelor's or More",
fill = "%")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
lnnbelpov100_map <- ggplot() +
geom_sf(data = map, aes(fill = LNNBELPOV), color = NA) +
scale_fill_gradient(low = "white",high = "darkred") +
labs(title = "Log Below Poverty")+
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
grid.arrange(pctvacant_map, pctsingles_map, pctbachmor_map, lnnbelpov100_map)
predictors <- data %>% dplyr::select(PCTBACHMOR, PCTVACANT, PCTSINGLES, LNBELPOV100)
predictors %>%
correlate() %>%
autoplot() +
geom_text(aes(label = round(r,digits=2)),size = 8)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
summary(fit)
#anova(fit)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
summary(fit)
anova(fit)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
summary(fit)
anova(fit)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
library(MASS)
library(DAAG)
library(corrr)      # another way to plot correlation plot
options(scipen = 999)
## Regression Results
fit <-lm(LNMEDHVAL ~  PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
summary(fit)
anova(fit)
View(boston.sf)
save.image("C:/Users/richa/OneDrive/Documents/Professional/Water Center Work/PA EJ Mapping Change Work/PA_EJ_Mapping.RData")
save.image("C:/Users/richa/OneDrive/Documents/Professional/Water Center Work/PA EJ Mapping Change Work/PA_EJ_Mapping.RData")
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(kableExtra)
library(sf)
library(gridExtra)
library(MASS)
library(DAAG)
library(corrr)      # another way to plot correlation plot
options(scipen = 999)
par(mfrow=c(1,2))
hist(data$MEDHVAL,breaks=100)
hist(data$LNMEDHVAL,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTBACHMOR,breaks=100)
hist(data$LNPCTBACHMOR,breaks=100)
par(mfrow=c(1,2))
hist(data$NBELPOV100,breaks=100)
hist(data$LNBELPOV100,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTVACANT,breaks=100)
hist(data$LNPCTVACANT,breaks=100)
par(mfrow=c(1,2))
hist(data$PCTSINGLES,breaks=100)
hist(data$LNPCTSINGLES,breaks=100)
# Change design
map <- st_read("Data/RegressionData.shp")
A <- ggplot() +
geom_sf(data = map, aes(fill = LNMEDHVAL), color = NA) +
scale_fill_gradient(low = "white",high = "darkseagreen4") +
labs(title = "Log Median Home Value") +
theme_dark() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
A
step <- stepAIC(fit, direction="both")
# display results
step$anova
fit1 <- lm(LNMEDHVAL ~ PCTVACANT + PCTSINGLES + PCTBACHMOR + LNBELPOV100, data=data)
cv1 <- CVlm(data=data, fit1, m=5)
mse1 <- attr(cv1, "ms")
rmse1 <- sqrt(mse1)						  #Obtaining RMSE for model 1
rmse1
fit2 <- lm(LNMEDHVAL ~ PCTVACANT + MEDHHINC, data=data)
cv2 <- CVlm(data=data, fit2, m=5)
mse2 <- attr(cv2, "ms")
rmse2 <- sqrt(mse2)						  #Obtaining RMSE for model 2
rmse2
